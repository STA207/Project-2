library("AER")
library("foreign")
setwd("~/Desktop/STA 207/Project 2/Project 2 Github/Project-2")
star = read.spss("STAR_Students.sav",to.data.frame = TRUE)
View(star)
data = names(star) %in% c("g1tchid","g1classtype","g1schid","g1surban", "g1classsize", "g1mathss", "g1tgen","g1trace","g1thighdegree","g1tcareer","g1tyears","g1motivraw","g1selfconraw", "g2tchid","g2classtype","g2schid","g2surban", "g2classsize", "g2absent","g2mathss", "g2tgen","g2trace","g2thighdegree","g2tcareer","g2tyears","g2motivraw","g2selfconraw")
data = star[,data]
data = data[complete.cases(data),]
data1 = names(star) %in% c("g1tchid","g1classtype","g1schid","g1surban", "g1classsize","g1mathss", "g1tgen","g1trace","g1thighdegree","g1tcareer","g1tyears","g1motivraw","g1selfconraw")
data1 = star[,data1]
data1 = data1[complete.cases(data1),]
data2 = names(star) %in% c("g2tchid","g2classtype","g2schid","g2surban", "g2classsize", "g2absent","g2mathss", "g2tgen","g2trace","g2thighdegree","g2tcareer","g2tyears","g2motivraw","g2selfconraw")
data2 = star[,data2]
data2 = data2[complete.cases(data2),]
#Write Report
Teach_as_Unit <- read.csv("~/Desktop/STA 207/Project 2/Project 2 Github/Project-2/Teach_as_Unit.csv")
View(Teach_as_Unit)
knitr::opts_chunk$set(echo=FALSE,message=FALSE,warning=FALSE)
t_data1 = Teach_as_Unit
reg1 = lm(g1_medmath ~ g1_classtype + g1_schoolID,
data = t_data1)
med_anova = aov(g1_medmath ~ g1_classtype + g1_schoolID,
data = t_data1)
plot(med_anova, which = c(2))
reg1 = lm(g1_medmath ~ as.factor(g1_classtype) + as.factor(g1_schoolID),
data = t_data1)
med_anova = aov(g1_medmath ~ as.factor(g1_classtype) + as.factor(g1_schoolID),
data = t_data1)
plot(med_anova, which = c(2))
hist(reg1$residuals, main = "Histogram of Residuals", xlab = "Residual Values")
str(t_data1)
t_data1$g1_schoolID = as.factor(t_data1$g1_schoolID)
str(t_data1)
reg1 = lm(g1_medmath ~ g1_classtype + g1_schoolID,
data = t_data1)
med_anova = aov(g1_medmath ~ as.factor(g1_classtype) + as.factor(g1_schoolID),
data = t_data1)
plot(med_anova, which = c(2))
shapiro.test(reg1$residuals)
plot(med_anova, which = c(1))
leveneTest(g1_medmath~g1_classtype, data = t_data1)
leveneTest(g1_medmath~g1_classtype+g1_schoolID, data = t_data1)
leveneTest(g1_medmath~g1_classtype, data = t_data1)
leveneTest(g1_medmath~g1_schoolID, data = t_data1)
library("AER")
library("foreign")
library("car")
levene.test(g1_medmath~g1_classtype+g1_schoolID, data = t_data1)
leveneTest(g1_medmath~g1_classtype+g1_schoolID, data = t_data1)
which(studres(reg1)>3 | studres(reg1)< -3)
library("AER")
library("foreign")
library("car")
library("MASS")
which(studres(reg1)>3 | studres(reg1)< -3)
length(which(studres(reg1)>3 | studres(reg1)< -3))
